name: Dev Org Creation
on:
  workflow_dispatch:
    inputs:
      creation-method:
        type: choice
        default: clean
        options:
          - snapshot
          - clean
        description: >-
          ========================================
          Creation Method - technology used to create a Scratch Org.
          ----------------------------------------
          1. "clean" - Scratch Org will be created from scratch; this is the
          slowest but most stable.
          ----------------------------------------
          2. "snapshot" - Scratch Org will be created from a Snapshot; package
          dependencies will already be pre-installed; this is quicker, but
          Snapshots are still an experimental Salesforce feature.
      scratch-org-validity:
        type: string
        required: true
        default: '14'
        description: >-
          ========================================
          Validity - validity of the scratch org to be created, in days. At
          least 1 and no more than 30.
      user-emails:
        type: string
        description: >-
          ========================================
          User Emails - optional whitespace-separated list of e-mail addresses,
          for which separate extra users will be created in the scratch Org.
      extra-users-profile-name:
        type: string
        required: true
        default: System Administrator
        description: >-
          ========================================
          Extra Users' Profile Name - API name of the Profile to which the extra
          users shall be assigned. The main user will be a System Administrator.
      set-up-dependencies:
        type: boolean
        default: true
        description: >-
          Set Up Dependencies - whether to set up project dependencies on the
          Scratch Org, for instance to install dependency packages like
          Apex Trigger Actions Framework and Field Service.
          --------------------------------------
          NOTE: This is ignored if either Snapshots are used, Snapshots already have external dependencies
          installed.
      deploy-codebase:
        type: boolean
        default: true
        description: >-
          Deploy Codebase - whether to deploy metadata of the project (located
          in source directories) onto the Scratch Org.
      as-packages:
        type: boolean
        default: false
        description: >-
          As Packages - Whether to deliver project functionality by INSTALLING
          project PACKAGES (those parts of the project that can and are getting
          packaged). Otherwise, metadata components shall be deployed UNPACKAGED
          through Metadata API.
          NOTE: Normally, Scratch Orgs used for User Story implementation should
          NOT be set up this way (i.e. this should be unchecked).
      insert-sample-data:
        type: boolean
        default: true
        description: >-
          Insert Sample Data - whether to insert sample data records into the
          Scratch Org.
jobs:
  create-scratch-org:
      runs-on: ubuntu-latest
      steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  npm install @salesforce/cli --location=global
                  nodeInstallPath=$(npm config get prefix)
                  echo "$nodeInstallPath/bin" >> $GITHUB_PATH
                  sf --version

            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v4

            # Store secret for dev hub
            - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
              shell: bash
              run: "echo ${{ secrets.DEVHUB_SFDX_URL}} > ./SFDX_URL_STORE.txt"

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: sf org login sfdx-url -f ./SFDX_URL_STORE.txt -a devhub -d

            # Create scratch org
            - name: 'Create scratch org'
              run: sf org create scratch -f config/project-scratch-def.json -a scratch-org -d -y 1   # create-user
      # Create scratch org
      - name: "Create New User"
        run: |        
          sf org create user username=testuser1@my.org email=me@my.org permsets=abc generatepassword=true --set-unique-username
          
      - name: Populate the Scratch Org with Project Implementation
        uses: ./.github/actions/setup-org
        with:
          user-emails: ${{ inputs.user-emails }}
          extra-users-profile-name: ${{ inputs.extra-users-profile-name }}
          
          deploy-codebase: >-
            ${{ inputs.deploy-codebase }}
          as-packages: >-
            ${{ inputs.as-packages }}
          insert-sample-data: >-
            ${{ inputs.insert-sample-data }}
          scratch-org-exclusive: >-
            ${{ inputs.deploy-codebase }}
      - name: Share Scratch Org Authorization Files
        uses: actions/upload-artifact@v4
        with:
          name: authfiles
          path: ./scratch-org-authfile*.json
          retention-days: ${{ inputs.scratch-org-validity || 1 }}
      - name: Log Out from the Orgs
        if: ${{ always() && env.ORG_AUTHORIZED }}
        run: |
          sf org logout --json --no-prompt --all
